awk
 awk -F '\t' '{print "update tblBlackboardArticle set recommend="$3",type="$2" where id="$1}' tmp
ls -l |awk 'BEGIN {size=0;} {size=size+$5;} END{print "[end]size is ", size/1024/1024,"M"}' 
sed 
替换s
替换文本中的字符串： 
sed 's/book/books/' file
直接编辑文件选项-i，
会匹配file文件中每一行的第一个book替换为books： 
sed -i 's/book/books/g' file
-n选项和p命令一起使用表示只打印那些发生替换的行：
sed -n 's/test/TEST/p' file 
使用后缀 /g 标记会替换每一行中的所有匹配： 
sed 's/book/books/g

删除文件的第2行： 
sed '2d' file  
删除文件的第2行到末尾所有行： sed '2,$d' file 
在test.conf文件第5行之前插入this is a test line： s

sed -i '5i\this is a test line' test.conf
每隔10行插入wait
sed '1~10i\wait;'  your_file

grep --color 
grep -E
grep -V
grep

【sort 命令】  
格式：sort [选项][源文件][-o 输出到文件]   
选项:  
  -b   忽略每行前面开始出的空格字符。  
  -c   检查文件是否已经按照顺序排序。  
  -f   排序时，忽略大小写字母。  
  -M   将前面3个字母依照月份的缩写进行排序。  
  -n   依照数值的大小排序。  
  -o<输出文件>   将排序后的结果存入指定的文件。  
  -r   以相反的顺序来排序。  
  -t<分隔字符>   指定排序时所用的栏位分隔字符。  
  -k  选择以哪个区间进行排序。  

  cut -b n 
  显示每一行第n个字节