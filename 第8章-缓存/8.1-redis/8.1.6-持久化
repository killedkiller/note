.Redis支持两种持久化方式：
1）RDB方式：根据指定规则，定时将内存中的数据存储在硬盘上；类比Oracle数据库的exp导出方式；
2）AOF方式：将每次执行的命令记录下来；类比Oracle数据库的SQL导出方式；
 
注：两种持久化方式可以使用其中一种，也可以结合使用；RDB方式更倾向于做数据备份；AOF方式更倾向于防止数据丢失，保证数据的一致性；
 
注：如果同时配置了AOF和RDB两种方式，则redis启动时，会使用AOF文件加载数据；
 
2.RDB方式-什么是快照（What）
1）快照：通过快照（snapshotting）完成，当符合一定条件时，redis自动将内存中的所有数据生成一份副本并存储在硬盘上；
2）快照触发条件：
•	根据配置规则自动进行快照；
•	手动执行SAVE或者BGSAVE命令；
•	执行FLUSHALL命令，触发自动快照；
•	执行主从复制时（replication），触发自动快照;
3）根据配置规则自动快照（异步方式）
配置格式：save <seconds> <changes>
配置样例：
save 900 1
save 300 10
save 60 10000
 
注：表示在多少秒内，有多少个键被更改，就执行快照；多个快照规则是或的关系；
 
4）执行SAVE或者BGSAVE命令手动执行快照
•	当进行服务重启、手动迁移、备份时，需要手动执行快照；
•	SAVE命令：同步执行快照，阻塞所有客户端请求，执行快照；缺点：数据较多时，导致redis长时间不响应，避免在生产环境中使用该命令；
•	BGSAVE命令：异步执行快照，服务器可以继续接受客户端请求；
•	LASTSAVE命令：获取最近一次成功执行快照的时间，返回unix时间戳；可配合BGSAVE命令，查看快照是否完成；
 
5）执行FLUSHALL命令，触发自动快照
当配置有自动快照条件时（仅判断有无，不判断规则），执行FLUSHALL命令，redis执行快照操作；反之，不执行快照；
 
6）执行主从复制时（replication），触发自动快照
当设置了主从模式时，Redis会在复制初始化时进行自动快照，不考虑是否配置自动快照条件；
 
7）redis默认将快照写入到dump.rdb文件中，可通过dir和dbfilename配置快照文件路径；
 
8）RDB文件是经过压缩的二进制格式，占用空间大小小于同步的内存数据大小；可以通过rdbcompression配置决定是否压缩RDB文件；不压缩文件，可以节约cpu资源；
 
9）redis启动后，会读取RDB快照文件，将数据载入内存；由于快照并非是实时的，所以如果redis异常宕机，再次启动时，仅能够加载最近一次快照的数据，可能造成数据丢失、不一致；所以配置合理的快照规则，尽可能止损；
 
注：如果对数据一致性要求较高，则使用AOF方式更为妥当，以性能换取稳定性；
 
3.RDB方式-快照原理（How）
异步快照过程：
1）使用fork函数，复制当前进程的副本，作为子进程；复制过程采用copy-on-writer策略；
2）父进程继续处理客户端发来的命令，子进程负责将内存中数据写入硬盘中的临时文件；
3）当子进程写入完所有数据后，会用该临时文件替换旧的RDB文件，完成一次快照；
 
补充：copy-on-write策略
1）fork函数发生的一刻，父子进程共享同一内存数据；
2）当父进程要更改其中某片数据时，操作系统会将该片数据复制一份以保证子进程的 数据不受影响；
3）新的RDB文件保存的时fork执行一刻的内存数据；
 
注：在进行快照过程中，如果写入操作过多，造成fork前后数据差异较大，则会使得内存用量显著增加；在考量内存分配时，应该注意这点；




1.AOF方式（What）
1）将redis执行的每一条更改数据的命令都追加到硬盘文件中；
2）由于每次执行命令都有写入硬盘操作，会降低redis性能；
3）相比RDB方式，更能够保证数据的一致性；
4）通过appendonly配置是否开启AOF方式；
5）redis默认将命令写入appendonly.aof文件，可以通过dir和appendfilename配置AOF文件路径；
6）AOF文件的内容是Redis客户端向服务器发送的原始通信协议内容；
 
2.AOF重写机制
1）由于AOF文件记录的是对数据更改的命令，所以会随着命令的执行逐渐增多，产生很多无用的命令；redis提供了对AOF文件的重写机制；
2）通过auto-aof-rewrite-percentage配置AOF文件大小超过上一次重写时的AOF文件大小的百分比时，进行AOF重写；
3）auto-aof-rewrite-min-size配置AOF要执行重写至少要达到的大小;
4）可以通过BGREWRITEAOF命令手动执行AOF文件的重写操作；
注：AOF文件重写的内容来源与内存数据，仅与内存数据有关，与之前的AOF文件无关；重写过程与RDB方式类似；
5）在redis启动时，会逐行执行AOF文件中的内容，数据载入相对较慢；
 
3.AOF写入频率控制
1）默认：由于操作系统缓存机制，每次执行的写命令数据并没有真正写入硬盘，而是进入了操作系统的硬盘缓存，系统默认30s执行一次同步操作；缺点：当系统发生异常时，硬盘缓存中的数据可能会丢失；
 
2）redis可以使用appendfsync配置AOF的写入硬盘频率；有三种策略：
appendfsync always：每次执行都写入硬盘；
appendfsync everysec：每秒执行一次硬盘写入；
appendfsync no：按照操作系统默认方式执行硬盘写入；